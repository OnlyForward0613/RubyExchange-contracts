{
  "address": "0x2B267A3e49b351DEdac892400a530ABb2f899d23",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINT_AMOUNT_ETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xee770260458b6d6f5b154b12f34cd7100a5b0919cf54f5082dac0f8c9e4377ba",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x0fe812C977646525E824D5dCC3f37A0Cf153B13b",
    "contractAddress": "0x2B267A3e49b351DEdac892400a530ABb2f899d23",
    "transactionIndex": 0,
    "gasUsed": "331446",
    "logsBloom": "0x
    "blockHash": "0x786cfbcaff0d440f0a71c8fa255ba09d9a6d2dd4d37dcd19c25f293ce9b199f3",
    "transactionHash": "0xee770260458b6d6f5b154b12f34cd7100a5b0919cf54f5082dac0f8c9e4377ba",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 186982,
        "transactionHash": "0xee770260458b6d6f5b154b12f34cd7100a5b0919cf54f5082dac0f8c9e4377ba",
        "address": "0x2B267A3e49b351DEdac892400a530ABb2f899d23",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000fe812c977646525e824d5dcc3f37a0cf153b13b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x786cfbcaff0d440f0a71c8fa255ba09d9a6d2dd4d37dcd19c25f293ce9b199f3"
      }
    ],
    "blockNumber": 186982,
    "cumulativeGasUsed": "331446",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ca980d51c658bcb6e0b1d5c9f9ee0b7",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINT_AMOUNT_ETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/faucet/FaucetRubyEuropa.sol\":\"FaucetRubyEuropa\"},\"evmVersion\":\"istanbul\",\"libraries\":{\"__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/faucet/FaucetRubyEuropa.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\npragma solidity 0.6.12;\\n\\ncontract FaucetRubyEuropa is Ownable {\\n    uint256 public constant MINT_AMOUNT_ETH = 0.1 ether;\\n\\n    constructor() public payable {}\\n\\n    receive() external payable {}\\n\\n    fallback() external payable {}\\n\\n    function mint(address payable receiver) external {\\n      uint256 bal = receiver.balance;\\n      if (bal < MINT_AMOUNT_ETH) {\\n        receiver.transfer(MINT_AMOUNT_ETH - bal);\\n      }\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        msg.sender.transfer(address(this).balance);\\n    }\\n}\\n\",\"keccak256\":\"0x8399ea6dffb946169fa0ee4d78644b88718bbcaedf2d9c37d436d0efa1c7ce61\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600061000e61005d565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610061565b3390565b61049b806100706000396000f3fe6080604052600436106100595760003560e01c806323336cc0146100625780633ccfd60b146100895780636a6278421461009e578063715018a6146100d15780638da5cb5b146100e6578063f2fde38b1461011757610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b60408051918252519081900360200190f35b34801561009557600080fd5b50610060610156565b3480156100aa57600080fd5b50610060600480360360208110156100c157600080fd5b50356001600160a01b03166101f9565b3480156100dd57600080fd5b5061006061025a565b3480156100f257600080fd5b506100fb610318565b604080516001600160a01b039092168252519081900360200190f35b34801561012357600080fd5b506100606004803603602081101561013a57600080fd5b50356001600160a01b0316610327565b67016345785d8a000081565b61015e61043b565b6001600160a01b031661016f610318565b6001600160a01b0316146101ca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f193505050501580156101f6573d6000803e3d6000fd5b50565b6001600160a01b0381163167016345785d8a0000811015610256576040516001600160a01b0383169067016345785d8a000083900380156108fc02916000818181858888f19350505050158015610254573d6000803e3d6000fd5b505b5050565b61026261043b565b6001600160a01b0316610273610318565b6001600160a01b0316146102ce576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61032f61043b565b6001600160a01b0316610340610318565b6001600160a01b03161461039b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103e05760405162461bcd60e51b81526004018080602001828103825260268152602001806104406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a3c1f7d874fd384928e076f27bec306ebf951c3e6750b05ef84a4ac2578c0d1664736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c806323336cc0146100625780633ccfd60b146100895780636a6278421461009e578063715018a6146100d15780638da5cb5b146100e6578063f2fde38b1461011757610060565b3661006057005b005b34801561006e57600080fd5b5061007761014a565b60408051918252519081900360200190f35b34801561009557600080fd5b50610060610156565b3480156100aa57600080fd5b50610060600480360360208110156100c157600080fd5b50356001600160a01b03166101f9565b3480156100dd57600080fd5b5061006061025a565b3480156100f257600080fd5b506100fb610318565b604080516001600160a01b039092168252519081900360200190f35b34801561012357600080fd5b506100606004803603602081101561013a57600080fd5b50356001600160a01b0316610327565b67016345785d8a000081565b61015e61043b565b6001600160a01b031661016f610318565b6001600160a01b0316146101ca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60405133904780156108fc02916000818181858888f193505050501580156101f6573d6000803e3d6000fd5b50565b6001600160a01b0381163167016345785d8a0000811015610256576040516001600160a01b0383169067016345785d8a000083900380156108fc02916000818181858888f19350505050158015610254573d6000803e3d6000fd5b505b5050565b61026261043b565b6001600160a01b0316610273610318565b6001600160a01b0316146102ce576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61032f61043b565b6001600160a01b0316610340610318565b6001600160a01b03161461039b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103e05760405162461bcd60e51b81526004018080602001828103825260268152602001806104406026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220a3c1f7d874fd384928e076f27bec306ebf951c3e6750b05ef84a4ac2578c0d1664736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4512,
        "contract": "contracts/faucet/FaucetRubyEuropa.sol:FaucetRubyEuropa",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}